[{"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js":"1","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js":"2","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js":"3","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js":"4","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js":"5","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js":"6","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js":"7","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js":"8","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js":"9","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js":"10","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js":"11","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js":"12","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js":"13","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\DisplayData.js":"14","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\AddFav.js":"15","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\iframecomp.js":"16","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton.js":"17","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton_1.js":"18","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption_3.js":"19","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption_1.js":"20","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption_2.js":"21"},{"size":500,"mtime":1616882674375,"results":"22","hashOfConfig":"23"},{"size":1374,"mtime":1616956530636,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1616111428499,"results":"25","hashOfConfig":"23"},{"size":251,"mtime":1616111418026,"results":"26","hashOfConfig":"23"},{"size":323,"mtime":1616873590794,"results":"27","hashOfConfig":"23"},{"size":548,"mtime":1616954613978,"results":"28","hashOfConfig":"23"},{"size":1861,"mtime":1616955473196,"results":"29","hashOfConfig":"23"},{"size":1554,"mtime":1616890945965,"results":"30","hashOfConfig":"23"},{"size":2755,"mtime":1616958213748,"results":"31","hashOfConfig":"23"},{"size":2748,"mtime":1616960908934,"results":"32","hashOfConfig":"23"},{"size":908,"mtime":1616956530637,"results":"33","hashOfConfig":"23"},{"size":1923,"mtime":1616873799597,"results":"34","hashOfConfig":"23"},{"size":495,"mtime":1616955056627,"results":"35","hashOfConfig":"23"},{"size":9187,"mtime":1616881325972,"results":"36","hashOfConfig":"23"},{"size":2605,"mtime":1616969199908,"results":"37","hashOfConfig":"23"},{"size":398,"mtime":1616954652888,"results":"38","hashOfConfig":"23"},{"size":534,"mtime":1616881348033,"results":"39","hashOfConfig":"23"},{"size":780,"mtime":1616881346880,"results":"40","hashOfConfig":"23"},{"size":499,"mtime":1616809517570,"results":"41","hashOfConfig":"23"},{"size":357,"mtime":1616809517569,"results":"42","hashOfConfig":"23"},{"size":499,"mtime":1616809517570,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"twnxic",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js",[],["90","91"],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js",["92"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Favourites.css\";\r\nimport BackButton from \"../components/BackButton\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nconst Favourites = () => {\r\n    const [favouritesArray, setFavouritesArray] = useState(getFavourites())\r\n    const [location, setLocation] = useState({})\r\n    const history = useHistory()\r\n\r\n    function getFavourites(){ //returns an array of JSON objects marked as favorites from localstorage\r\n        let tempObject = JSON.parse(localStorage.getItem('favourites'))\r\n        return tempObject\r\n    }\r\n\r\n    //redirects user to the relevant weather page based on form submission.\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const tempData = await getLocationWeather(location)\r\n        if(tempData.cod===\"200\"){\r\n            history.push({\r\n                pathname: '/weatherpage/'+tempData.city.name,\r\n                state: tempData\r\n            })\r\n        }\r\n    }\r\n\r\n    //Data is fetched\r\n    const getLocationWeather = async (location) => {\r\n        let url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${API_KEY}&units=${localStorage.getItem('settings')}`\r\n        const result = await fetch(url)\r\n        const data = await result.json()\r\n        return data\r\n    }\r\n    \r\n    const [buttonNames, setButtonNames] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        // If the favourites array is loaded in\r\n        // Map it to a list of buttons\r\n        // Run anytime favourites change\r\n        if(favouritesArray){\r\n            setButtonNames(\r\n                (favouritesArray.favourite).map(favourite => \r\n                    <div className=\"wrapper\">\r\n                        <button className=\"button\" \r\n                            value={favourite.name +\",\" + favourite.country}\r\n                            onClick={(e) => setLocation(e.target.value)}\r\n                        >\r\n                            {favourite.name + \", \"+favourite.country }\r\n                        </button>\r\n                    </div>\r\n                )\r\n            )\r\n        }else{\r\n            console.log(\"empty\")\r\n        }\r\n    },[favouritesArray])\r\n    \r\n    return (\r\n    <div className=\"background\">\r\n      <BackButton />\r\n\r\n      {/* <div className=\"container\">\r\n        <button className=\"refresh\" onClick={() => refresh()}>\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <button className=\"clear\" onClick={() => clear()}>\r\n          Clear\r\n        </button>\r\n      </div> */}\r\n      <form onSubmit={onSubmit}>\r\n        <div>{buttonNames}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favourites;\r\n","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\DisplayData.js",["93","94","95","96","97","98","99","100","101"],"\r\nimport { useEffect, useState } from 'react'\r\nimport SwiperCore, { Pagination } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\n\r\n\r\nimport 'swiper/swiper-bundle.css'\r\n\r\nSwiperCore.use([Pagination])\r\n\r\n// Component for the swiper used to display the data recieved from the API call.\r\nconst DisplayData = (data) => {\r\n    // Each slide in a swiper to be displayed\r\n    const [slides, setSlides] = useState([]);\r\n    // Time labels\r\n    const labels = []\r\n    const dataPerDay = []\r\n\r\n    // Gets the data for each day in arrays of 8\r\n    // Each item in array of 8 has 4 elements: temp, wind direction, wind speed, cloud coverage (%)\r\n    const getDataPerDay = () => {\r\n        let directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\r\n        let tempData = [[],[],[],[],[],[],[],[],[]]\r\n        let currentHour = 0\r\n        let windDirection\r\n        for (let i=0; i < data.data.list.length; i++) {\r\n            windDirection = parseInt(data.data.list[i].wind.deg)\r\n            windDirection = [Math.round(((windDirection %= 360) < 0 ? windDirection + 360 : windDirection) / 45) % 8]\r\n            tempData[currentHour] = {\r\n                temp: parseInt(data.data.list[i].main.temp),\r\n                windDirection: directions[windDirection],\r\n                windSpeed: parseInt(data.data.list[i].wind.speed),\r\n                cloudCover: data.data.list[i].clouds.all,\r\n                iconImgSrc: `http://openweathermap.org/img/wn/${data.data.list[i].weather[0].icon}@2x.png`\r\n            }\r\n            if((i+1)%8 === 0) {\r\n                if(i < 8) {\r\n                    tempData[9] = \"Today\"\r\n                } else if (i < 16) {\r\n                    tempData[9] = \"Tomorrow\"\r\n                } else {\r\n                    tempData[9] = (i+1)/8 + \" days ahead\"\r\n                }\r\n\r\n                dataPerDay.push(tempData.slice(0))\r\n                currentHour = 0\r\n            } else {\r\n                currentHour += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get the time strings, starting from the closest time with data.\r\n    const getLabels = () => {\r\n        let tempTime\r\n        for (let i = 0; i < 8; i++) {\r\n            tempTime = data.data.list[i].dt_txt.split(\" \")[1]\r\n            labels.push(tempTime.substring(0, tempTime.length-3))\r\n        }\r\n    }\r\n\r\n    // Update the slides to display the data\r\n    const updateSlides = () => {\r\n        let tempSlides = []\r\n        let windUnit\r\n        let tempUnit\r\n        if (localStorage.getItem('settings') === 'Metric') {\r\n            windUnit = \"m/s\"\r\n            tempUnit = \"C\"\r\n        } else {\r\n            windUnit = \"mph\"\r\n            tempUnit = \"F\"\r\n        }\r\n        for (let i=0; i < 5; i++) {\r\n            tempSlides.push(\r\n                <SwiperSlide key={`slide-${i*2}`}>\r\n                <div className=\"shadowBox\">\r\n                    <div className=\"date\">\r\n                        <div style={Column}>{dataPerDay[i][9]}</div>\r\n                    </div>\r\n                    <div className=\"weatherData\">\r\n                        <div style={MultiColumn}>\r\n                            <div style={Column}>\r\n                                {labels[0]} <br/>\r\n                                {dataPerDay[i][0].temp}&#176;{tempUnit} <br/>\r\n                                {dataPerDay[i][0].windDirection} <br/>\r\n                                {dataPerDay[i][0].windSpeed}{windUnit}<br/> \r\n                                {dataPerDay[i][0].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][0].iconImgSrc}/>\r\n                            </div>\r\n                            <div style={Column}>\r\n                                {labels[1]} <br/>\r\n                                {dataPerDay[i][1].temp}&#176;{tempUnit} <br/>\r\n                                {dataPerDay[i][1].windDirection} <br/>\r\n                                {dataPerDay[i][1].windSpeed}{windUnit}<br/> \r\n                                {dataPerDay[i][1].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][1].iconImgSrc}/>\r\n                            </div>\r\n                            <div style={Column}>\r\n                                {labels[2]} <br/>\r\n                                {dataPerDay[i][2].temp}&#176;{tempUnit} <br/>\r\n                                {dataPerDay[i][2].windDirection} <br/>\r\n                                {dataPerDay[i][2].windSpeed}{windUnit}<br/>\r\n                                {dataPerDay[i][2].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][2].iconImgSrc}/>\r\n                            </div>\r\n                            <div style={Column}>\r\n                                {labels[3]} <br/>\r\n                                {dataPerDay[i][3].temp}&#176;{tempUnit} <br/>\r\n                                {dataPerDay[i][3].windDirection} <br/>\r\n                                {dataPerDay[i][3].windSpeed}{windUnit}<br/>\r\n                                {dataPerDay[i][3].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </SwiperSlide>\r\n            )\r\n            tempSlides.push(\r\n                <SwiperSlide key={`slide-${i*2+1}`}>\r\n                    <div className=\"shadowBox\">\r\n                        <div className=\"date\">\r\n                            <div style={Column}>{dataPerDay[i][9]}</div>\r\n                        </div>\r\n                        <div className=\"weatherData\">\r\n                            <div style={MultiColumn}>\r\n                                <div style={Column}>\r\n                                    {labels[4]} <br/>\r\n                                    {dataPerDay[i][4].temp}&#176;{tempUnit} <br/>\r\n                                    {dataPerDay[i][4].windDirection} <br/>\r\n                                    {dataPerDay[i][4].windSpeed}{windUnit}<br/> \r\n                                    {dataPerDay[i][4].cloudCover}%<br/>\r\n                                    <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                                </div>\r\n                                <div style={Column}>\r\n                                    {labels[5]} <br/>\r\n                                    {dataPerDay[i][5].temp}&#176;{tempUnit} <br/>\r\n                                    {dataPerDay[i][5].windDirection} <br/>\r\n                                    {dataPerDay[i][5].windSpeed}{windUnit}<br/> \r\n                                    {dataPerDay[i][5].cloudCover}%<br/>\r\n                                    <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                                </div>\r\n                                <div style={Column}>\r\n                                    {labels[6]} <br/>\r\n                                    {dataPerDay[i][6].temp}&#176;{tempUnit} <br/>\r\n                                    {dataPerDay[i][6].windDirection}<br/>\r\n                                    {dataPerDay[i][6].windSpeed}{windUnit}<br/> \r\n                                    {dataPerDay[i][6].cloudCover}%<br/>\r\n                                    <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                                </div>\r\n                                <div style={Column}>\r\n                                    {labels[7]} <br/>\r\n                                    {dataPerDay[i][7].temp}&#176;{tempUnit} <br/>\r\n                                    {dataPerDay[i][7].windDirection}<br/>\r\n                                    {dataPerDay[i][7].windSpeed}{windUnit}<br/>\r\n                                    {dataPerDay[i][7].cloudCover}%<br/>\r\n                                    <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </SwiperSlide>\r\n            )\r\n        }\r\n        setSlides(tempSlides)\r\n    }\r\n\r\n    // Every time the data passed to component updates,\r\n    // Re-render data\r\n    useEffect(() => {\r\n        getDataPerDay()\r\n        getLabels()\r\n        updateSlides()\r\n    }, [data])\r\n\r\n    return (\r\n        <div>\r\n            <Swiper\r\n                observer={true}\r\n                observeParents = {true}\r\n                pagination={{ clickable: true }}\r\n                breakpoints={{\r\n                    // when window width is >= 640px\r\n                    640: {\r\n                        slidesPerView: 1,\r\n                    },\r\n                    // when window width is >= 768px\r\n                    768: {\r\n                        slidesPerView: 2,\r\n                    },\r\n                }}\r\n            >\r\n                {slides}\r\n            </Swiper>\r\n            {/* <pre>{JSON.stringify(data, 0, 2)}</pre> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayData\r\n\r\nconst Column = {\r\n    textAlign: \"center\",\r\n}\r\n\r\nconst MultiColumn = {\r\n    columnCount: \"4\",\r\n    height: \"11em\",\r\n}\r\n\r\nconst imgIcon = {\r\n    maxWidth: \"2.5em\"\r\n}\r\n","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\AddFav.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\iframecomp.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton_1.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption_3.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption_1.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption_2.js",[],["102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":10,"column":29,"nodeType":"110","messageId":"111","endLine":10,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":89,"column":33,"nodeType":"114","endLine":89,"endColumn":89},{"ruleId":"112","severity":1,"message":"113","line":97,"column":33,"nodeType":"114","endLine":97,"endColumn":89},{"ruleId":"112","severity":1,"message":"113","line":105,"column":33,"nodeType":"114","endLine":105,"endColumn":89},{"ruleId":"112","severity":1,"message":"113","line":113,"column":33,"nodeType":"114","endLine":113,"endColumn":89},{"ruleId":"112","severity":1,"message":"113","line":134,"column":37,"nodeType":"114","endLine":134,"endColumn":93},{"ruleId":"112","severity":1,"message":"113","line":142,"column":37,"nodeType":"114","endLine":142,"endColumn":93},{"ruleId":"112","severity":1,"message":"113","line":150,"column":37,"nodeType":"114","endLine":150,"endColumn":93},{"ruleId":"112","severity":1,"message":"113","line":158,"column":37,"nodeType":"114","endLine":158,"endColumn":93},{"ruleId":"115","severity":1,"message":"116","line":175,"column":8,"nodeType":"117","endLine":175,"endColumn":14,"suggestions":"118"},{"ruleId":"104","replacedBy":"119"},{"ruleId":"106","replacedBy":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'setFavouritesArray' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataPerDay', 'getLabels', and 'updateSlides'. Either include them or remove the dependency array.","ArrayExpression",["123"],["121"],["122"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [data, getDataPerDay, getLabels, updateSlides]",{"range":"126","text":"127"},[8303,8309],"[data, getDataPerDay, getLabels, updateSlides]"]