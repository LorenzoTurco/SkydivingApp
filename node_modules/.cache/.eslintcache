[{"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js":"1","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js":"2","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js":"3","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js":"4","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js":"5","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js":"6","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecLocation.js":"7","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js":"8","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js":"9","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js":"10","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js":"11","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js":"12","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js":"13","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js":"14","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\WeatherPage.js":"15","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\DisplayData.js":"16","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\AddFav.js":"17"},{"size":500,"mtime":1616111427844,"results":"18","hashOfConfig":"19"},{"size":1235,"mtime":1616424212459,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1616111428499,"results":"21","hashOfConfig":"19"},{"size":251,"mtime":1616111418026,"results":"22","hashOfConfig":"19"},{"size":132,"mtime":1616111390776,"results":"23","hashOfConfig":"19"},{"size":112,"mtime":1616111420100,"results":"24","hashOfConfig":"19"},{"size":120,"mtime":1616111422578,"results":"25","hashOfConfig":"19"},{"size":112,"mtime":1616111421416,"results":"26","hashOfConfig":"19"},{"size":114,"mtime":1616111423469,"results":"27","hashOfConfig":"19"},{"size":659,"mtime":1616337911930,"results":"28","hashOfConfig":"19"},{"size":894,"mtime":1616424427375,"results":"29","hashOfConfig":"19"},{"size":1175,"mtime":1616111383246,"results":"30","hashOfConfig":"19"},{"size":1558,"mtime":1616337633012,"results":"31","hashOfConfig":"19"},{"size":335,"mtime":1616176263136,"results":"32","hashOfConfig":"19"},{"size":2728,"mtime":1616337911932,"results":"33","hashOfConfig":"19"},{"size":6768,"mtime":1616364457039,"results":"34","hashOfConfig":"19"},{"size":2292,"mtime":1616434328948,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"twnxic",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js",[],["72","73"],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js",["74"],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecLocation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\WeatherPage.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\DisplayData.js",["75"],"import { useEffect, useState } from 'react'\r\nimport SwiperCore, { Pagination } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\n\r\n\r\nimport 'swiper/swiper-bundle.css'\r\n\r\nSwiperCore.use([Pagination])\r\n\r\nconst DisplayData = (data) => {\r\n    const [slides, setSlides] = useState([]);\r\n    const labels = []\r\n    const dataPerDay = []\r\n\r\n    // Gets the data for each day in arrays of 8\r\n    // Each item in array of 8 has 4 elements: temp, wind direction, wind speed, cloud coverage (%)\r\n    const getDataPerDay = () => {\r\n        let directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\r\n        let tempData = [[],[],[],[],[],[],[],[],[]]\r\n        let currentHour = 0\r\n        let windDirection\r\n        for (let i=0; i < data.data.list.length; i++) {\r\n            windDirection = parseInt(data.data.list[i].wind.deg)\r\n            windDirection = [Math.round(((windDirection %= 360) < 0 ? windDirection + 360 : windDirection) / 45) % 8]\r\n            tempData[currentHour] = {\r\n                temp: parseInt(data.data.list[i].main.temp),\r\n                windDirection: directions[windDirection],\r\n                windSpeed: parseInt(data.data.list[i].wind.speed),\r\n                cloudCover: data.data.list[i].clouds.all\r\n            }\r\n            if((i+1)%8 === 0) {\r\n                if(i < 8) {\r\n                    tempData[9] = \"Today\"\r\n                } else if (i < 16) {\r\n                    tempData[9] = \"Tomorrow\"\r\n                } else {\r\n                    tempData[9] = (i+1)/8 + \" days ahead\"\r\n                }\r\n\r\n                dataPerDay.push(tempData.slice(0))\r\n                currentHour = 0\r\n            } else {\r\n                currentHour += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get the time strings, starting from the closest time with data.\r\n    const getLabels = () => {\r\n        let tempTime\r\n        for (let i = 0; i < 8; i++) {\r\n            tempTime = data.data.list[i].dt_txt.split(\" \")[1]\r\n            labels.push(tempTime.substring(0, tempTime.length-3))\r\n        }\r\n    }\r\n\r\n    // Update the slides to display the data\r\n    const updateSlides = () => {\r\n        let tempSlides = []\r\n        for (let i=0; i < 5; i++) {\r\n            tempSlides.push(\r\n                <SwiperSlide key={`slide-${i*2}`}>\r\n                <div style={Column}>{dataPerDay[i][9]}</div>\r\n                    <div style={MultiColumn}>\r\n                        <div style={Column}>\r\n                            {labels[0]} <br/>\r\n                            {dataPerDay[i][0].temp}&#176; <br/>\r\n                            {dataPerDay[i][0].windDirection} <br/>\r\n                            {dataPerDay[i][0].windSpeed}mph<br/> \r\n                            {dataPerDay[i][0].cloudCover}%\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[1]} <br/>\r\n                            {dataPerDay[i][1].temp}&#176; <br/>\r\n                            {dataPerDay[i][1].windDirection} <br/>\r\n                            {dataPerDay[i][1].windSpeed}mph<br/> \r\n                            {dataPerDay[i][1].cloudCover}%\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[2]} <br/>\r\n                            {dataPerDay[i][2].temp}&#176; <br/>\r\n                            {dataPerDay[i][2].windDirection} <br/>\r\n                            {dataPerDay[i][2].windSpeed}mph<br/>\r\n                            {dataPerDay[i][2].cloudCover}%\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[3]} <br/>\r\n                            {dataPerDay[i][3].temp}&#176; <br/>\r\n                            {dataPerDay[i][3].windDirection} <br/>\r\n                            {dataPerDay[i][3].windSpeed}mph<br/>\r\n                            {dataPerDay[i][3].cloudCover}%\r\n                        </div>\r\n                    </div>\r\n                </SwiperSlide>\r\n            )\r\n            tempSlides.push(\r\n                <SwiperSlide key={`slide-${i*2+1}`}>\r\n                    <div style={Column}>{dataPerDay[i][9]}</div>\r\n                    <div style={MultiColumn}>\r\n                        <div style={Column}>\r\n                            {labels[4]} <br/>\r\n                            {dataPerDay[i][4].temp}&#176; <br/>\r\n                            {dataPerDay[i][4].windDirection} <br/>\r\n                            {dataPerDay[i][4].windSpeed}mph<br/> \r\n                            {dataPerDay[i][4].cloudCover}%\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[5]} <br/>\r\n                            {dataPerDay[i][5].temp}&#176; <br/>\r\n                            {dataPerDay[i][5].windDirection} <br/>\r\n                            {dataPerDay[i][5].windSpeed}mph<br/> \r\n                            {dataPerDay[i][5].cloudCover}%\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[6]} <br/>\r\n                            {dataPerDay[i][6].temp}&#176; <br/>\r\n                            {dataPerDay[i][6].windDirection}<br/>\r\n                            {dataPerDay[i][6].windSpeed}mph<br/> \r\n                            {dataPerDay[i][6].cloudCover}%\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[7]} <br/>\r\n                            {dataPerDay[i][7].temp}&#176; <br/>\r\n                            {dataPerDay[i][7].windDirection}<br/>\r\n                            {dataPerDay[i][7].windSpeed}mph<br/>\r\n                            {dataPerDay[i][7].cloudCover}%\r\n                        </div>\r\n                    </div>\r\n                </SwiperSlide>\r\n            )\r\n        }\r\n        setSlides(tempSlides)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataPerDay()\r\n        getLabels()\r\n        updateSlides()\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n            <Swiper\r\n                observer={true}\r\n                observeParents = {true}\r\n                pagination={{ clickable: true }}\r\n                breakpoints={{\r\n                    // when window width is >= 640px\r\n                    640: {\r\n                    slidesPerView: 1,\r\n                    },\r\n                    // when window width is >= 768px\r\n                    768: {\r\n                    slidesPerView: 2,\r\n                    },\r\n                }}\r\n            >\r\n                {slides}\r\n            </Swiper>\r\n            <pre>{JSON.stringify(data, 0, 2)}</pre>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayData\r\n\r\nconst Column = {\r\n    textAlign: \"center\"\r\n}\r\n\r\nconst MultiColumn = {\r\n    columnCount: \"4\",\r\n    height: \"8.5em\"\r\n}","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\AddFav.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":139,"column":8,"nodeType":"86","endLine":139,"endColumn":14,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'WeatherPage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataPerDay', 'getLabels', and 'updateSlides'. Either include them or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [data, getDataPerDay, getLabels, updateSlides]",{"range":"93","text":"94"},[5956,5962],"[data, getDataPerDay, getLabels, updateSlides]"]