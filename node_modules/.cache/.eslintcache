[{"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js":"1","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js":"2","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js":"3","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js":"4","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js":"5","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js":"6","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecLocation.js":"7","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js":"8","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js":"9","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js":"10","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js":"11","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js":"12","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js":"13","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js":"14","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\WeatherPage.js":"15"},{"size":500,"mtime":1616111427844,"results":"16","hashOfConfig":"17"},{"size":1219,"mtime":1616181761362,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1616111428499,"results":"19","hashOfConfig":"17"},{"size":251,"mtime":1616111418026,"results":"20","hashOfConfig":"17"},{"size":132,"mtime":1616111390776,"results":"21","hashOfConfig":"17"},{"size":112,"mtime":1616111420100,"results":"22","hashOfConfig":"17"},{"size":120,"mtime":1616111422578,"results":"23","hashOfConfig":"17"},{"size":112,"mtime":1616111421416,"results":"24","hashOfConfig":"17"},{"size":114,"mtime":1616111423469,"results":"25","hashOfConfig":"17"},{"size":118,"mtime":1616111391843,"results":"26","hashOfConfig":"17"},{"size":4079,"mtime":1616181571685,"results":"27","hashOfConfig":"17"},{"size":1175,"mtime":1616111383246,"results":"28","hashOfConfig":"17"},{"size":1705,"mtime":1616118273902,"results":"29","hashOfConfig":"17"},{"size":335,"mtime":1616176263136,"results":"30","hashOfConfig":"17"},{"size":2264,"mtime":1616180914474,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"twnxic",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js",["64"],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js",[],["65","66"],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecLocation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js",["67","68","69","70","71","72"],"import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport SearchIcon from '../assets/search.png'\r\n// import { Line } from \"react-chartjs-2\"\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst Weather = () => {\r\n    const history = useHistory()\r\n    const [data, setData] = useState(history.location.weatherData)\r\n    const [location, setLocation] = useState(data.city.name)\r\n\r\n    const [test, setTest] = useState(true)\r\n\r\n    const placeName = data.city.name\r\n    const placeCountry = data.city.country\r\n    const [graphLabels, setGraphLabels] = useState([])\r\n    const [graphData, setGraphData] = useState([])\r\n    const [fullGraphData, setFullGraphData] = useState({})\r\n\r\n    // Weather info needed:\r\n    // temp\r\n    // clouds\r\n    // wind\r\n\r\n    // TO DO LIST\r\n    // Use mapping for each array of days to create 5 graphs\r\n\r\n    const updateInfo = async (e) => {\r\n        if (e) {\r\n            e.preventDefault()\r\n        }\r\n        if (!location) {\r\n            return\r\n        }\r\n\r\n        const tempData = await getLocationWeather(location)\r\n        if (tempData.cod === \"200\") {\r\n            setData(tempData)\r\n        } else {\r\n            setLocation('')\r\n            return\r\n        }\r\n        setGraphLabels(await getLabels())\r\n        setGraphData(await getDataPerDay())\r\n\r\n        // Just some residue graph stuff, dont worry bout this\r\n        // const tempChart = null\r\n        // let tempGraphData = {\r\n        //     labels: graphLabels,\r\n        //     datasets: [\r\n        //         {\r\n        //             label: \"Today\",\r\n        //             data: graphData[0],\r\n        //             fill: false,\r\n        //             pointHoverRadius: 15,\r\n        //             borderColor: \"#742774\"\r\n        //         }\r\n        //     ]\r\n        // }\r\n        // setFullGraphData(tempGraphData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateInfo()\r\n    }, [])\r\n\r\n    // Gets list of temperatures per day\r\n    // Each subarray is a day\r\n    // Each day has 8 temperatures\r\n    const getDataPerDay = () => {\r\n        let currentDay = 0\r\n        let currentHour = 0\r\n        let i\r\n        let dataPerDay = [[], [], [], [], []]\r\n        for (i = 0; i < data.cnt; i++) {\r\n            dataPerDay[currentDay][currentHour] = data.list[i].main.temp\r\n            if (i % 8 === 0 && i > 0) {\r\n                currentDay += 1\r\n            }\r\n            currentHour += 1\r\n        }\r\n        return dataPerDay\r\n    }\r\n\r\n    // Get the time labels\r\n    // First one being the one closest to the current time.\r\n    const getLabels = () => {\r\n        let labels = []\r\n        let tempTime\r\n        let i\r\n        for (i = 0; i < 8; i++) {\r\n            tempTime = data.list[i].dt_txt.split(\" \")\r\n            labels.push(tempTime[1])\r\n        }\r\n        return labels\r\n    }\r\n\r\n    // Get weather data from API\r\n    const getLocationWeather = async (location) => {\r\n        let url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${API_KEY}&units=metric`\r\n        const result = await fetch(url)\r\n        const data = await result.json()\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div id=\"chart0\"></div>\r\n            <div id=\"chart1\"></div>\r\n            <div id=\"chart2\"></div>\r\n            <div id=\"chart3\"></div>\r\n            <div id=\"chart4\"></div> */}\r\n\r\n            <form onSubmit={updateInfo}>\r\n                <input\r\n                    style={{}}\r\n                    value={location}\r\n                    placeholder={\"Search location\"}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"image\"\r\n                    src={SearchIcon}\r\n                    style={{ maxWidth: \"20px\" }}\r\n                    alt=\"Submit\"\r\n                />\r\n            </form>\r\n            <p>{graphLabels}</p>\r\n            <p>{placeName}</p>\r\n            <p>{placeCountry}</p>\r\n            <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\WeatherPage.js",[],{"ruleId":"73","severity":1,"message":"74","line":11,"column":8,"nodeType":"75","messageId":"76","endLine":11,"endColumn":19},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":13,"column":12,"nodeType":"75","messageId":"76","endLine":13,"endColumn":16},{"ruleId":"73","severity":1,"message":"82","line":13,"column":18,"nodeType":"75","messageId":"76","endLine":13,"endColumn":25},{"ruleId":"73","severity":1,"message":"83","line":18,"column":12,"nodeType":"75","messageId":"76","endLine":18,"endColumn":21},{"ruleId":"73","severity":1,"message":"84","line":19,"column":12,"nodeType":"75","messageId":"76","endLine":19,"endColumn":25},{"ruleId":"73","severity":1,"message":"85","line":19,"column":27,"nodeType":"75","messageId":"76","endLine":19,"endColumn":43},{"ruleId":"86","severity":1,"message":"87","line":66,"column":8,"nodeType":"88","endLine":66,"endColumn":10,"suggestions":"89"},"no-unused-vars","'WeatherPage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","'graphData' is assigned a value but never used.","'fullGraphData' is assigned a value but never used.","'setFullGraphData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateInfo'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [updateInfo]",{"range":"95","text":"96"},[1929,1931],"[updateInfo]"]