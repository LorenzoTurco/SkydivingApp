[{"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js":"1","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js":"2","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js":"3","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js":"4","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js":"5","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js":"6","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecLocation.js":"7","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js":"8","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js":"9","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js":"10","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js":"11","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js":"12","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js":"13","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js":"14","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\DisplayData.js":"15","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\AddFav.js":"16","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\iframecomp.js":"17","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton.js":"18","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton_1.js":"19"},{"size":500,"mtime":1616111427844,"results":"20","hashOfConfig":"21"},{"size":1118,"mtime":1616782501399,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1616111428499,"results":"23","hashOfConfig":"21"},{"size":251,"mtime":1616111418026,"results":"24","hashOfConfig":"21"},{"size":246,"mtime":1616798891730,"results":"25","hashOfConfig":"21"},{"size":615,"mtime":1616505562848,"results":"26","hashOfConfig":"21"},{"size":120,"mtime":1616111422578,"results":"27","hashOfConfig":"21"},{"size":2222,"mtime":1616700136992,"results":"28","hashOfConfig":"21"},{"size":203,"mtime":1616807345072,"results":"29","hashOfConfig":"21"},{"size":659,"mtime":1616337911930,"results":"30","hashOfConfig":"21"},{"size":2480,"mtime":1616807616321,"results":"31","hashOfConfig":"21"},{"size":1175,"mtime":1616111383246,"results":"32","hashOfConfig":"21"},{"size":1552,"mtime":1616808090968,"results":"33","hashOfConfig":"21"},{"size":335,"mtime":1616176263136,"results":"34","hashOfConfig":"21"},{"size":8093,"mtime":1616807017938,"results":"35","hashOfConfig":"21"},{"size":2245,"mtime":1616449822454,"results":"36","hashOfConfig":"21"},{"size":337,"mtime":1616680107461,"results":"37","hashOfConfig":"21"},{"size":500,"mtime":1616603980513,"results":"38","hashOfConfig":"21"},{"size":728,"mtime":1616680107461,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"twnxic",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\index.js",[],["82","83"],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\App.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\reportWebVitals.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Home.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Error.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Rainfall.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecLocation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\RecGear.js",["84","85","86"],"import { useParams } from 'react-router';\r\nimport './RecGear.css';\r\nimport PARACHUTE from '../assets/parachute.jpg'\r\nimport AAD from \"../assets/aad.jpg\"\r\nimport JUMPSUIT from \"../assets/jumps.png\"\r\nimport ALTIMETER from \"../assets/alti.jpg\"\r\nimport GOGGLES from \"../assets/googles.jpg\"\r\nimport HELMET from \"../assets/helmet.jpg\"\r\nimport THERMAL from \"../assets/TC.png\"\r\nimport GLOVES from \"../assets/gloves.png\"\r\n\r\n\r\nconst RecGear = () => {\r\n    \r\n\r\n    return (\r\n        \r\n        <div className=\"body\">\r\n               \r\n            <h1 className=\"headingStyle\">Equipment is needed for Skydiving</h1>\r\n            \r\n        <div class=\"gallery\">\r\n             <img src={PARACHUTE} alt=\"PARACHUTE\" width=\"600\" height=\"400\"/>\r\n             <div class=\"desc\">PARACHUTE</div>\r\n               </div>\r\n\r\n        <div class=\"gallery\">\r\n  \r\n                <img src={AAD} alt=\"AAD\" width=\"620\" height=\"500\"/>\r\n                 <div class=\"desc\">AAD</div>\r\n        </div>\r\n\r\n        <div class=\"gallery\">\r\n             <img src={JUMPSUIT} alt=\"JUMPSUIT\" width=\"700\" height=\"800\"/>\r\n             <div class=\"desc\">JUMPSUIT</div>\r\n        </div>\r\n\r\n        <div class=\"gallery\">\r\n             <img src={ALTIMETER} alt=\"ALTIMETER\" width=\"600\" height=\"400\"/>\r\n             <div class=\"desc\">ALTIMETER</div>\r\n        </div>\r\n\r\n        <div class=\"gallery\">\r\n             <img src={GOGGLES} alt=\"GOGGLES\" width=\"600\" height=\"400\"/>\r\n             <div class=\"desc\">GOGGLES</div>\r\n        </div>\r\n        <div class=\"gallery\">\r\n             <img src={HELMET} alt=\"HELEMT\" width=\"600\" height=\"400\"/>\r\n             <div class=\"desc\">HELMET</div>\r\n        </div>\r\n        \r\n        \r\n        <div >\r\n        <h2 ><b className=\"w1\"> WHAT TO WEAR WHEN ITâ€™S COLD\r\n    (If the temparature below 5<sup>0</sup>c or so)</b> </h2>\r\n \r\n        <div class=\"g1\">\r\n        <img src={THERMAL} width=\"250\" height=\"auto\"/>\r\n        <div class=\"d1\">THERMAL</div>\r\n        </div>\r\n        <div class=\"g1\">\r\n        <img src={GLOVES} width=\"250\" height=\"auto\"/>\r\n        <div class=\"d1\">GLOVES</div>\r\n        </div>\r\n         \r\n     </div>\r\n\r\n\r\n                \r\n           </div>  \r\n           \r\n         \r\n\r\n\r\n   \r\n    );\r\n}\r\n\r\n\r\nexport default RecGear\r\n","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Settings.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Favourites.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\pages\\Weather.js",["87","88"],"  \r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Searchbar from '../components/Searchbar'\r\nimport DisplayData from '../components/DisplayData'\r\nimport AddFav from '../components/AddFav'\r\nimport BackButton from '../components/BackButton'\r\nimport LocationIcon from '../assets/location.png'\r\n\r\nimport '../components/Navigation.css'\r\n\r\nconst Weather = () => {\r\n    const history = useHistory()\r\n    const [data, setData] = useState(history.location.state)\r\n    const { searchLocation } = useParams()\r\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\r\n\r\n    useEffect(() => {\r\n        setData(history.location.state)\r\n    }, [searchLocation, history.location.state])\r\n\r\n    return (\r\n        <div>\r\n            <BackButton />\r\n            {/* AddFav to create a bookmark icon that favourites saved locations */}\r\n            <AddFav\r\n                locationName={history.location.state.city.name}\r\n                countryName={history.location.state.city.country}\r\n            />\r\n            <Searchbar />\r\n            <div className=\"generalInfo\">\r\n                <p className=\"currentTemp\"> {parseInt(data.list[0].main.temp)}&#176; </p>\r\n                <p className=\"location\"> \r\n                    {data.city.name}, {data.city.country}\r\n                    <input\r\n                        type=\"image\"\r\n                        src={LocationIcon}\r\n                        style={{width:\"20px\", height:\"25px\", marginRight:\"27vw\", paddingTop:\"5px\"}}\r\n                        alt=\"location\"\r\n                    />\r\n                </p>\r\n                <img src={`http://openweathermap.org/img/wn/${data.list[0].weather[0].icon}@2x.png`} style={{height:\"70px\", \r\n                    width:\"70px\",float:\"right\", marginTop:\"7vh\", marginRight:\"25vw\"}}/>\r\n                <p className=\"weatherMain\">\r\n                    {data.list[0].weather[0].main} <br/>\r\n                </p>\r\n                {/* More specific description of the main weather focus.\r\n                    e.g. if 'Clouds', the description could say 'few clouds' all the way to 'overcase clouds' */}\r\n                <p className=\"weatherDescription\">\r\n                    <p>{data.list[0].weather[0].description}</p>\r\n                </p>\r\n            </div>\r\n            {/* Display data for showing the forecast using a swiper */}\r\n            <DisplayData data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n\r\n","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Navigation.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\Searchbar.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\NavOption.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\DisplayData.js",["89","90","91","92","93","94","95","96","97"],"\r\nimport { useEffect, useState } from 'react'\r\nimport SwiperCore, { Pagination } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\n\r\n\r\nimport 'swiper/swiper-bundle.css'\r\n\r\nSwiperCore.use([Pagination])\r\n\r\nconst DisplayData = (data) => {\r\n    const [slides, setSlides] = useState([]);\r\n    const labels = []\r\n    const dataPerDay = []\r\n\r\n    // Gets the data for each day in arrays of 8\r\n    // Each item in array of 8 has 4 elements: temp, wind direction, wind speed, cloud coverage (%)\r\n    const getDataPerDay = () => {\r\n        let directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\r\n        let tempData = [[],[],[],[],[],[],[],[],[]]\r\n        let currentHour = 0\r\n        let windDirection\r\n        for (let i=0; i < data.data.list.length; i++) {\r\n            windDirection = parseInt(data.data.list[i].wind.deg)\r\n            windDirection = [Math.round(((windDirection %= 360) < 0 ? windDirection + 360 : windDirection) / 45) % 8]\r\n            tempData[currentHour] = {\r\n                temp: parseInt(data.data.list[i].main.temp),\r\n                windDirection: directions[windDirection],\r\n                windSpeed: parseInt(data.data.list[i].wind.speed),\r\n                cloudCover: data.data.list[i].clouds.all,\r\n                iconImgSrc: `http://openweathermap.org/img/wn/${data.data.list[i].weather[0].icon}@2x.png`\r\n            }\r\n            if((i+1)%8 === 0) {\r\n                if(i < 8) {\r\n                    tempData[9] = \"Today\"\r\n                } else if (i < 16) {\r\n                    tempData[9] = \"Tomorrow\"\r\n                } else {\r\n                    tempData[9] = (i+1)/8 + \" days ahead\"\r\n                }\r\n\r\n                dataPerDay.push(tempData.slice(0))\r\n                currentHour = 0\r\n            } else {\r\n                currentHour += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    // Get the time strings, starting from the closest time with data.\r\n    const getLabels = () => {\r\n        let tempTime\r\n        for (let i = 0; i < 8; i++) {\r\n            tempTime = data.data.list[i].dt_txt.split(\" \")[1]\r\n            labels.push(tempTime.substring(0, tempTime.length-3))\r\n        }\r\n    }\r\n\r\n    // Update the slides to display the data\r\n    const updateSlides = () => {\r\n        let tempSlides = []\r\n        for (let i=0; i < 5; i++) {\r\n            tempSlides.push(\r\n                <SwiperSlide key={`slide-${i*2}`}>\r\n                <div className=\"date\">\r\n                    <div style={Column}>{dataPerDay[i][9]}</div>\r\n                </div>\r\n                <div className=\"weatherData\">\r\n                    <div style={MultiColumn}>\r\n                        <div style={Column}>\r\n                            {labels[0]} <br/>\r\n                            {dataPerDay[i][0].temp}&#176;C <br/>\r\n                            {dataPerDay[i][0].windDirection} <br/>\r\n                            {dataPerDay[i][0].windSpeed}mph<br/> \r\n                            {dataPerDay[i][0].cloudCover}%<br/>\r\n                            <img style={imgIcon} src={dataPerDay[i][0].iconImgSrc}/>\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[1]} <br/>\r\n                            {dataPerDay[i][1].temp}&#176;C <br/>\r\n                            {dataPerDay[i][1].windDirection} <br/>\r\n                            {dataPerDay[i][1].windSpeed}mph<br/> \r\n                            {dataPerDay[i][1].cloudCover}%<br/>\r\n                            <img style={imgIcon} src={dataPerDay[i][1].iconImgSrc}/>\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[2]} <br/>\r\n                            {dataPerDay[i][2].temp}&#176;C <br/>\r\n                            {dataPerDay[i][2].windDirection} <br/>\r\n                            {dataPerDay[i][2].windSpeed}mph<br/>\r\n                            {dataPerDay[i][2].cloudCover}%<br/>\r\n                            <img style={imgIcon} src={dataPerDay[i][2].iconImgSrc}/>\r\n                        </div>\r\n                        <div style={Column}>\r\n                            {labels[3]} <br/>\r\n                            {dataPerDay[i][3].temp}&#176;C <br/>\r\n                            {dataPerDay[i][3].windDirection} <br/>\r\n                            {dataPerDay[i][3].windSpeed}mph<br/>\r\n                            {dataPerDay[i][3].cloudCover}%<br/>\r\n                            <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </SwiperSlide>\r\n            )\r\n            tempSlides.push(\r\n                <SwiperSlide key={`slide-${i*2+1}`}>\r\n                    <div className=\"date\">\r\n                        <div style={Column}>{dataPerDay[i][9]}</div>\r\n                    </div>\r\n                    <div className=\"weatherData\">\r\n                        <div style={MultiColumn}>\r\n                            <div style={Column}>\r\n                                {labels[4]} <br/>\r\n                               {dataPerDay[i][4].temp}&#176;C <br/>\r\n                                {dataPerDay[i][4].windDirection} <br/>\r\n                                {dataPerDay[i][4].windSpeed}mph<br/> \r\n                                {dataPerDay[i][4].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                            </div>\r\n                            <div style={Column}>\r\n                                {labels[5]} <br/>\r\n                                {dataPerDay[i][5].temp}&#176;C <br/>\r\n                                {dataPerDay[i][5].windDirection} <br/>\r\n                                {dataPerDay[i][5].windSpeed}mph<br/> \r\n                                {dataPerDay[i][5].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                            </div>\r\n                            <div style={Column}>\r\n                                {labels[6]} <br/>\r\n                                {dataPerDay[i][6].temp}&#176;C <br/>\r\n                                {dataPerDay[i][6].windDirection}<br/>\r\n                                {dataPerDay[i][6].windSpeed}mph<br/> \r\n                                {dataPerDay[i][6].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                            </div>\r\n                            <div style={Column}>\r\n                                {labels[7]} <br/>\r\n                                {dataPerDay[i][7].temp}&#176;C <br/>\r\n                                {dataPerDay[i][7].windDirection}<br/>\r\n                                {dataPerDay[i][7].windSpeed}mph<br/>\r\n                                {dataPerDay[i][7].cloudCover}%<br/>\r\n                                <img style={imgIcon} src={dataPerDay[i][3].iconImgSrc}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </SwiperSlide>\r\n            )\r\n        }\r\n        setSlides(tempSlides)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataPerDay()\r\n        getLabels()\r\n        updateSlides()\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n            <Swiper\r\n                observer={true}\r\n                observeParents = {true}\r\n                pagination={{ clickable: true }}\r\n                breakpoints={{\r\n                    // when window width is >= 640px\r\n                    640: {\r\n                    slidesPerView: 1,\r\n                    },\r\n                    // when window width is >= 768px\r\n                    768: {\r\n                    slidesPerView: 2,\r\n                    },\r\n                }}\r\n            >\r\n                {slides}\r\n            </Swiper>\r\n            <pre>{JSON.stringify(data, 0, 2)}</pre>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayData\r\n\r\nconst Column = {\r\n    textAlign: \"center\",\r\n}\r\n\r\nconst MultiColumn = {\r\n    columnCount: \"4\",\r\n    height: \"11em\"\r\n}\r\n\r\nconst imgIcon = {\r\n    maxWidth: \"2.5em\"\r\n}\r\n","F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\AddFav.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\iframecomp.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton.js",[],"F:\\Computing Year 2 Sem 2\\ECS522U Graphical User Interfaces\\GUI-Project\\src\\components\\BackButton_1.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":58,"column":9,"nodeType":"108","endLine":58,"endColumn":55},{"ruleId":"106","severity":1,"message":"107","line":62,"column":9,"nodeType":"108","endLine":62,"endColumn":54},{"ruleId":"102","severity":1,"message":"109","line":16,"column":11,"nodeType":"104","messageId":"105","endLine":16,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":42,"column":17,"nodeType":"108","endLine":43,"endColumn":88},{"ruleId":"106","severity":1,"message":"107","line":76,"column":29,"nodeType":"108","endLine":76,"endColumn":85},{"ruleId":"106","severity":1,"message":"107","line":84,"column":29,"nodeType":"108","endLine":84,"endColumn":85},{"ruleId":"106","severity":1,"message":"107","line":92,"column":29,"nodeType":"108","endLine":92,"endColumn":85},{"ruleId":"106","severity":1,"message":"107","line":100,"column":29,"nodeType":"108","endLine":100,"endColumn":85},{"ruleId":"106","severity":1,"message":"107","line":119,"column":33,"nodeType":"108","endLine":119,"endColumn":89},{"ruleId":"106","severity":1,"message":"107","line":127,"column":33,"nodeType":"108","endLine":127,"endColumn":89},{"ruleId":"106","severity":1,"message":"107","line":135,"column":33,"nodeType":"108","endLine":135,"endColumn":89},{"ruleId":"106","severity":1,"message":"107","line":143,"column":33,"nodeType":"108","endLine":143,"endColumn":89},{"ruleId":"110","severity":1,"message":"111","line":157,"column":8,"nodeType":"112","endLine":157,"endColumn":14,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'directions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataPerDay', 'getLabels', and 'updateSlides'. Either include them or remove the dependency array.","ArrayExpression",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [data, getDataPerDay, getLabels, updateSlides]",{"range":"119","text":"120"},[7232,7238],"[data, getDataPerDay, getLabels, updateSlides]"]